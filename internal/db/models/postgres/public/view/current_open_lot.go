//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CurrentOpenLot = newCurrentOpenLotTable("public", "current_open_lot", "")

type currentOpenLotTable struct {
	postgres.Table

	//Columns
	OpenLotID postgres.ColumnInteger
	CostBasis postgres.ColumnFloat
	Quantity  postgres.ColumnFloat
	TradeID   postgres.ColumnInteger
	Date      postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CurrentOpenLotTable struct {
	currentOpenLotTable

	EXCLUDED currentOpenLotTable
}

// AS creates new CurrentOpenLotTable with assigned alias
func (a CurrentOpenLotTable) AS(alias string) *CurrentOpenLotTable {
	return newCurrentOpenLotTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CurrentOpenLotTable with assigned schema name
func (a CurrentOpenLotTable) FromSchema(schemaName string) *CurrentOpenLotTable {
	return newCurrentOpenLotTable(schemaName, a.TableName(), a.Alias())
}

func newCurrentOpenLotTable(schemaName, tableName, alias string) *CurrentOpenLotTable {
	return &CurrentOpenLotTable{
		currentOpenLotTable: newCurrentOpenLotTableImpl(schemaName, tableName, alias),
		EXCLUDED:            newCurrentOpenLotTableImpl("", "excluded", ""),
	}
}

func newCurrentOpenLotTableImpl(schemaName, tableName, alias string) currentOpenLotTable {
	var (
		OpenLotIDColumn = postgres.IntegerColumn("open_lot_id")
		CostBasisColumn = postgres.FloatColumn("cost_basis")
		QuantityColumn  = postgres.FloatColumn("quantity")
		TradeIDColumn   = postgres.IntegerColumn("trade_id")
		DateColumn      = postgres.TimestampzColumn("date")
		allColumns      = postgres.ColumnList{OpenLotIDColumn, CostBasisColumn, QuantityColumn, TradeIDColumn, DateColumn}
		mutableColumns  = postgres.ColumnList{OpenLotIDColumn, CostBasisColumn, QuantityColumn, TradeIDColumn, DateColumn}
	)

	return currentOpenLotTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		OpenLotID: OpenLotIDColumn,
		CostBasis: CostBasisColumn,
		Quantity:  QuantityColumn,
		TradeID:   TradeIDColumn,
		Date:      DateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
