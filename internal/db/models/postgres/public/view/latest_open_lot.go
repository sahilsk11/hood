//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LatestOpenLot = newLatestOpenLotTable("public", "latest_open_lot", "")

type latestOpenLotTable struct {
	postgres.Table

	//Columns
	OpenLotID  postgres.ColumnInteger
	CostBasis  postgres.ColumnFloat
	Quantity   postgres.ColumnFloat
	TradeID    postgres.ColumnInteger
	DeletedAt  postgres.ColumnTimestampz
	CreatedAt  postgres.ColumnTimestampz
	ModifiedAt postgres.ColumnTimestampz
	LotID      postgres.ColumnString
	Date       postgres.ColumnDate

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LatestOpenLotTable struct {
	latestOpenLotTable

	EXCLUDED latestOpenLotTable
}

// AS creates new LatestOpenLotTable with assigned alias
func (a LatestOpenLotTable) AS(alias string) *LatestOpenLotTable {
	return newLatestOpenLotTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LatestOpenLotTable with assigned schema name
func (a LatestOpenLotTable) FromSchema(schemaName string) *LatestOpenLotTable {
	return newLatestOpenLotTable(schemaName, a.TableName(), a.Alias())
}

func newLatestOpenLotTable(schemaName, tableName, alias string) *LatestOpenLotTable {
	return &LatestOpenLotTable{
		latestOpenLotTable: newLatestOpenLotTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newLatestOpenLotTableImpl("", "excluded", ""),
	}
}

func newLatestOpenLotTableImpl(schemaName, tableName, alias string) latestOpenLotTable {
	var (
		OpenLotIDColumn  = postgres.IntegerColumn("open_lot_id")
		CostBasisColumn  = postgres.FloatColumn("cost_basis")
		QuantityColumn   = postgres.FloatColumn("quantity")
		TradeIDColumn    = postgres.IntegerColumn("trade_id")
		DeletedAtColumn  = postgres.TimestampzColumn("deleted_at")
		CreatedAtColumn  = postgres.TimestampzColumn("created_at")
		ModifiedAtColumn = postgres.TimestampzColumn("modified_at")
		LotIDColumn      = postgres.StringColumn("lot_id")
		DateColumn       = postgres.DateColumn("date")
		allColumns       = postgres.ColumnList{OpenLotIDColumn, CostBasisColumn, QuantityColumn, TradeIDColumn, DeletedAtColumn, CreatedAtColumn, ModifiedAtColumn, LotIDColumn, DateColumn}
		mutableColumns   = postgres.ColumnList{OpenLotIDColumn, CostBasisColumn, QuantityColumn, TradeIDColumn, DeletedAtColumn, CreatedAtColumn, ModifiedAtColumn, LotIDColumn, DateColumn}
	)

	return latestOpenLotTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		OpenLotID:  OpenLotIDColumn,
		CostBasis:  CostBasisColumn,
		Quantity:   QuantityColumn,
		TradeID:    TradeIDColumn,
		DeletedAt:  DeletedAtColumn,
		CreatedAt:  CreatedAtColumn,
		ModifiedAt: ModifiedAtColumn,
		LotID:      LotIDColumn,
		Date:       DateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
