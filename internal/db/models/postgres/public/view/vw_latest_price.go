//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var VwLatestPrice = newVwLatestPriceTable("public", "vw_latest_price", "")

type vwLatestPriceTable struct {
	postgres.Table

	//Columns
	PriceID   postgres.ColumnInteger
	Symbol    postgres.ColumnString
	Price     postgres.ColumnFloat
	UpdatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type VwLatestPriceTable struct {
	vwLatestPriceTable

	EXCLUDED vwLatestPriceTable
}

// AS creates new VwLatestPriceTable with assigned alias
func (a VwLatestPriceTable) AS(alias string) *VwLatestPriceTable {
	return newVwLatestPriceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new VwLatestPriceTable with assigned schema name
func (a VwLatestPriceTable) FromSchema(schemaName string) *VwLatestPriceTable {
	return newVwLatestPriceTable(schemaName, a.TableName(), a.Alias())
}

func newVwLatestPriceTable(schemaName, tableName, alias string) *VwLatestPriceTable {
	return &VwLatestPriceTable{
		vwLatestPriceTable: newVwLatestPriceTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newVwLatestPriceTableImpl("", "excluded", ""),
	}
}

func newVwLatestPriceTableImpl(schemaName, tableName, alias string) vwLatestPriceTable {
	var (
		PriceIDColumn   = postgres.IntegerColumn("price_id")
		SymbolColumn    = postgres.StringColumn("symbol")
		PriceColumn     = postgres.FloatColumn("price")
		UpdatedAtColumn = postgres.TimestampzColumn("updated_at")
		allColumns      = postgres.ColumnList{PriceIDColumn, SymbolColumn, PriceColumn, UpdatedAtColumn}
		mutableColumns  = postgres.ColumnList{PriceIDColumn, SymbolColumn, PriceColumn, UpdatedAtColumn}
	)

	return vwLatestPriceTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PriceID:   PriceIDColumn,
		Symbol:    SymbolColumn,
		Price:     PriceColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
