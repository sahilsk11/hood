//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type LotStatus string

const (
	LotStatus_Open   LotStatus = "OPEN"
	LotStatus_Closed LotStatus = "CLOSED"
)

func (e *LotStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "OPEN":
		*e = LotStatus_Open
	case "CLOSED":
		*e = LotStatus_Closed
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for LotStatus enum")
	}

	return nil
}

func (e LotStatus) String() string {
	return string(e)
}
