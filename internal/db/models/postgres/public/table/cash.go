//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Cash = newCashTable("public", "cash", "")

type cashTable struct {
	postgres.Table

	//Columns
	CashID    postgres.ColumnInteger
	Amount    postgres.ColumnFloat
	Custodian postgres.ColumnString
	CreatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CashTable struct {
	cashTable

	EXCLUDED cashTable
}

// AS creates new CashTable with assigned alias
func (a CashTable) AS(alias string) *CashTable {
	return newCashTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CashTable with assigned schema name
func (a CashTable) FromSchema(schemaName string) *CashTable {
	return newCashTable(schemaName, a.TableName(), a.Alias())
}

func newCashTable(schemaName, tableName, alias string) *CashTable {
	return &CashTable{
		cashTable: newCashTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newCashTableImpl("", "excluded", ""),
	}
}

func newCashTableImpl(schemaName, tableName, alias string) cashTable {
	var (
		CashIDColumn    = postgres.IntegerColumn("cash_id")
		AmountColumn    = postgres.FloatColumn("amount")
		CustodianColumn = postgres.StringColumn("custodian")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		allColumns      = postgres.ColumnList{CashIDColumn, AmountColumn, CustodianColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{AmountColumn, CustodianColumn, CreatedAtColumn}
	)

	return cashTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CashID:    CashIDColumn,
		Amount:    AmountColumn,
		Custodian: CustodianColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
