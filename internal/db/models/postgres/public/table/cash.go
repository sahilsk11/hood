//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Cash = newCashTable("public", "cash", "")

type cashTable struct {
	postgres.Table

	//Columns
	ActivityID   postgres.ColumnInteger
	Amount       postgres.ColumnFloat
	ActivityType postgres.ColumnString
	Date         postgres.ColumnDate
	CreatedAt    postgres.ColumnTimestampz
	ModifiedAt   postgres.ColumnTimestampz
	Custodian    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CashTable struct {
	cashTable

	EXCLUDED cashTable
}

// AS creates new CashTable with assigned alias
func (a CashTable) AS(alias string) *CashTable {
	return newCashTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CashTable with assigned schema name
func (a CashTable) FromSchema(schemaName string) *CashTable {
	return newCashTable(schemaName, a.TableName(), a.Alias())
}

func newCashTable(schemaName, tableName, alias string) *CashTable {
	return &CashTable{
		cashTable: newCashTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newCashTableImpl("", "excluded", ""),
	}
}

func newCashTableImpl(schemaName, tableName, alias string) cashTable {
	var (
		ActivityIDColumn   = postgres.IntegerColumn("activity_id")
		AmountColumn       = postgres.FloatColumn("amount")
		ActivityTypeColumn = postgres.StringColumn("activity_type")
		DateColumn         = postgres.DateColumn("date")
		CreatedAtColumn    = postgres.TimestampzColumn("created_at")
		ModifiedAtColumn   = postgres.TimestampzColumn("modified_at")
		CustodianColumn    = postgres.StringColumn("custodian")
		allColumns         = postgres.ColumnList{ActivityIDColumn, AmountColumn, ActivityTypeColumn, DateColumn, CreatedAtColumn, ModifiedAtColumn, CustodianColumn}
		mutableColumns     = postgres.ColumnList{AmountColumn, ActivityTypeColumn, DateColumn, CreatedAtColumn, ModifiedAtColumn, CustodianColumn}
	)

	return cashTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ActivityID:   ActivityIDColumn,
		Amount:       AmountColumn,
		ActivityType: ActivityTypeColumn,
		Date:         DateColumn,
		CreatedAt:    CreatedAtColumn,
		ModifiedAt:   ModifiedAtColumn,
		Custodian:    CustodianColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
