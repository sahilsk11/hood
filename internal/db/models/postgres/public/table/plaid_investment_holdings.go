//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PlaidInvestmentHoldings = newPlaidInvestmentHoldingsTable("public", "plaid_investment_holdings", "")

type plaidInvestmentHoldingsTable struct {
	postgres.Table

	//Columns
	PlaidInvestmentsHoldingsID postgres.ColumnString
	Ticker                     postgres.ColumnString
	TradingAccountID           postgres.ColumnString
	TotalCostBasis             postgres.ColumnFloat
	Quantity                   postgres.ColumnFloat
	CreatedAt                  postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PlaidInvestmentHoldingsTable struct {
	plaidInvestmentHoldingsTable

	EXCLUDED plaidInvestmentHoldingsTable
}

// AS creates new PlaidInvestmentHoldingsTable with assigned alias
func (a PlaidInvestmentHoldingsTable) AS(alias string) *PlaidInvestmentHoldingsTable {
	return newPlaidInvestmentHoldingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlaidInvestmentHoldingsTable with assigned schema name
func (a PlaidInvestmentHoldingsTable) FromSchema(schemaName string) *PlaidInvestmentHoldingsTable {
	return newPlaidInvestmentHoldingsTable(schemaName, a.TableName(), a.Alias())
}

func newPlaidInvestmentHoldingsTable(schemaName, tableName, alias string) *PlaidInvestmentHoldingsTable {
	return &PlaidInvestmentHoldingsTable{
		plaidInvestmentHoldingsTable: newPlaidInvestmentHoldingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                     newPlaidInvestmentHoldingsTableImpl("", "excluded", ""),
	}
}

func newPlaidInvestmentHoldingsTableImpl(schemaName, tableName, alias string) plaidInvestmentHoldingsTable {
	var (
		PlaidInvestmentsHoldingsIDColumn = postgres.StringColumn("plaid_investments_holdings_id")
		TickerColumn                     = postgres.StringColumn("ticker")
		TradingAccountIDColumn           = postgres.StringColumn("trading_account_id")
		TotalCostBasisColumn             = postgres.FloatColumn("total_cost_basis")
		QuantityColumn                   = postgres.FloatColumn("quantity")
		CreatedAtColumn                  = postgres.TimestampzColumn("created_at")
		allColumns                       = postgres.ColumnList{PlaidInvestmentsHoldingsIDColumn, TickerColumn, TradingAccountIDColumn, TotalCostBasisColumn, QuantityColumn, CreatedAtColumn}
		mutableColumns                   = postgres.ColumnList{TickerColumn, TradingAccountIDColumn, TotalCostBasisColumn, QuantityColumn, CreatedAtColumn}
	)

	return plaidInvestmentHoldingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PlaidInvestmentsHoldingsID: PlaidInvestmentsHoldingsIDColumn,
		Ticker:                     TickerColumn,
		TradingAccountID:           TradingAccountIDColumn,
		TotalCostBasis:             TotalCostBasisColumn,
		Quantity:                   QuantityColumn,
		CreatedAt:                  CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
