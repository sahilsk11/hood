//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PlaidAccountMetadata = newPlaidAccountMetadataTable("public", "plaid_account_metadata", "")

type plaidAccountMetadataTable struct {
	postgres.Table

	//Columns
	PlaidAccountMetadataID postgres.ColumnString
	TradingAccountID       postgres.ColumnString
	Mask                   postgres.ColumnString
	ItemID                 postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PlaidAccountMetadataTable struct {
	plaidAccountMetadataTable

	EXCLUDED plaidAccountMetadataTable
}

// AS creates new PlaidAccountMetadataTable with assigned alias
func (a PlaidAccountMetadataTable) AS(alias string) *PlaidAccountMetadataTable {
	return newPlaidAccountMetadataTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlaidAccountMetadataTable with assigned schema name
func (a PlaidAccountMetadataTable) FromSchema(schemaName string) *PlaidAccountMetadataTable {
	return newPlaidAccountMetadataTable(schemaName, a.TableName(), a.Alias())
}

func newPlaidAccountMetadataTable(schemaName, tableName, alias string) *PlaidAccountMetadataTable {
	return &PlaidAccountMetadataTable{
		plaidAccountMetadataTable: newPlaidAccountMetadataTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newPlaidAccountMetadataTableImpl("", "excluded", ""),
	}
}

func newPlaidAccountMetadataTableImpl(schemaName, tableName, alias string) plaidAccountMetadataTable {
	var (
		PlaidAccountMetadataIDColumn = postgres.StringColumn("plaid_account_metadata_id")
		TradingAccountIDColumn       = postgres.StringColumn("trading_account_id")
		MaskColumn                   = postgres.StringColumn("mask")
		ItemIDColumn                 = postgres.StringColumn("item_id")
		allColumns                   = postgres.ColumnList{PlaidAccountMetadataIDColumn, TradingAccountIDColumn, MaskColumn, ItemIDColumn}
		mutableColumns               = postgres.ColumnList{TradingAccountIDColumn, MaskColumn, ItemIDColumn}
	)

	return plaidAccountMetadataTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PlaidAccountMetadataID: PlaidAccountMetadataIDColumn,
		TradingAccountID:       TradingAccountIDColumn,
		Mask:                   MaskColumn,
		ItemID:                 ItemIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
